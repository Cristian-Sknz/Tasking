{"version":3,"sources":["components/Dashboard/Task/TaskCard.jsx","lib/storage.js","lib/category.js","lib/task.js","components/Dashboard/Task/Tasks.jsx","components/Dashboard/Dashboard.jsx","lib/imageStorage.js","components/Profile/User/avatar-icon.jpg","components/Profile/User/User.jsx","components/Profile/DashboardFilter/DashboardFilter.jsx","components/Profile/AddTaskButton/AddTaskButton.jsx","components/Modal/Form/TaskForm.jsx","components/Modal/AddTaskModal.jsx","components/Profile/Profile.jsx","App.js","index.js"],"names":["TaskCard","props","state","duration","data","getTimerString","option","interval","this","setInterval","newDuration","setState","isExpired","clearInterval","delete","className","category","style","name","onClick","handleTaskOptions","bind","icon","handleRemoveCard","title","mode","forceSingleModeWidth","max","createdDate","calendar","getDateAgo","humanize","Component","APPStorage","Promise","resolve","reject","item","localStorage","getItem","_prefix","value","setItem","categories","Category","id","map","values","filter","c","parseInt","TaskManager","getTasks","tasks","task","toStorageTask","JSON","get","parse","index","moment","toISOString","dateTime","add","taskId","getById","undefined","a","hasById","storageAll","t","nextId","push","then","notify","Number","del","ret","getLoadedTasks","_observers","forEach","func","f","StorageTask","set","stringify","num","catch","hours","time","split","clone","isActive","TaskDuration","isScheduled","scheduleDuration","activeDuration","getDuration","format","minutes","Tasks","register","updateTasks","tsk","unregister","Dashboard","ImageStorage","file","toBase64","base64","reader","FileReader","readAsDataURL","onload","result","onerror","error","User","username","src","avatar","imageInput","React","createRef","imagePreview","getImage","e","target","current","click","setImage","files","ref","handleImageUpload","backgroundImage","accept","type","onChange","handlePreviewUpdate","html","handleUsername","tagName","DashboardFilter","active","handleTitleClick","AddTaskButton","TaskForm","form","date","save","onSubmit","setPreview","onReset","handleForm","handlePreview","htmlFor","children","pattern","min","AddTaskModal","preview","Profile","modal","handleModal","App","library","faEllipsisH","faTimes","defineLocale","momentConfig","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74f89053.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport TextFit from \"react-textfit\";\r\n\r\nclass TaskCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      duration: props.data.getTimerString(),\r\n      option: false,\r\n    };\r\n    this.interval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      let data = this.props.data;\r\n      let newDuration = data.getTimerString();\r\n      if (this.state.duration !== newDuration) {\r\n        this.setState({ ...this.state, duration: newDuration});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    let data = this.props.data;\r\n    if (data.isExpired() && !this.interval) {\r\n      this.setState({ ...this.state, duration: data.getTimerString() });\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (!this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n\r\n  handleTaskOptions() {\r\n    this.setState({ ...this.state, option: !this.state.option });\r\n  }\r\n\r\n  handleRemoveCard() {\r\n    this.props.data.delete();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className={`task ${this.props?.data.category.style}`}>\r\n        <div className=\"task-body\">\r\n          <header className=\"task-header\">\r\n            <p className=\"task-category\">{this.props?.data.category.name}</p>\r\n            <div className=\"task-options\">\r\n              <FontAwesomeIcon\r\n                onClick={this.handleTaskOptions.bind(this)}\r\n                icon={[\"fas\", \"ellipsis-h\"]}\r\n                className=\"option-icon\"\r\n              />\r\n              <ul className={`options-list${this.state.option ? \" active\" : \"\"}`}>\r\n                <li className=\"task-option\" onClick={this.handleRemoveCard.bind(this)}>Deletar</li>\r\n              </ul>\r\n            </div>\r\n          </header>\r\n          <section className=\"task-content\">\r\n            <div className=\"task-title\">{this.props?.data.title}</div>\r\n            <TextFit\r\n              className=\"time-remaining\"\r\n              mode=\"single\"\r\n              forceSingleModeWidth={true}\r\n              max={45}\r\n            >\r\n              <h2>{this.state.duration}</h2>\r\n            </TextFit>\r\n            <div className={`task-state ${this.props?.data.state[0]}`}>{this.props?.data.state[1]}</div>\r\n          </section>\r\n          <div className=\"task-footer\">\r\n            <div className=\"task-createddate\" title={this.props.data.createdDate.calendar()}>\r\n              {\"há \" + this.props.data.getDateAgo().humanize()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskCard;\r\n","class APPStorage {\r\n\r\n    static _prefix = 'taskapp_';\r\n    static get(name) {\r\n        return new Promise((resolve, reject) => {\r\n            const item = localStorage.getItem(APPStorage._prefix + name);\r\n            if (!item) {\r\n                reject(`LocalStorage: ${name} not found`);\r\n                return;\r\n            }\r\n\r\n            resolve(item);\r\n        });\r\n    }\r\n\r\n    static set(name, value) {\r\n        return new Promise((resolve) => {\r\n            localStorage.setItem(APPStorage._prefix + name, value);\r\n            resolve(value);\r\n        });\r\n    }\r\n}\r\n\r\nexport default APPStorage;","const categories = [\r\n  { name: \"Trabalho\", style: \"work\" },\r\n  { name: \"Jogos\", style: \"play\" },\r\n  { name: \"Estudo\", style: \"study\" },\r\n  { name: \"Lazer\", style: \"selfCare\" },\r\n];\r\n\r\nclass Category {\r\n\r\n  constructor(id, name, style) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.style = style;\r\n  }\r\n\r\n  static values() {\r\n    return categories.map((value, id) => new Category(id, value.name, value.style));\r\n  }\r\n\r\n  static getById(value) {\r\n    let category = Category.values().filter((c) => c.id === parseInt(value))[0];\r\n    if (!category) {\r\n      category = Category.values()[0];\r\n    }\r\n    \r\n    return category;\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import APPStorage from \"./storage\";\r\nimport data from \"../data/data.json\";\r\nimport moment from \"moment\";\r\nimport Category from \"./category\";\r\n\r\nclass TaskManager {\r\n\r\n  static _observers = [];\r\n\r\n  static async getLoadedTasks() {\r\n    const tasks = await this.getTasks()\r\n    return tasks.map((task) => this.toStorageTask(task));\r\n  }\r\n\r\n  static async getTasks() {\r\n    try {\r\n      return JSON.parse(await APPStorage.get('tasks'));\r\n    } catch {\r\n      return getUpdatedJson();\r\n    }\r\n  }\r\n\r\n  static async getById(taskId) {\r\n    const tasks = await this.getTasks();\r\n    return tasks.filter((task) => task.id === taskId)[0];\r\n  }\r\n\r\n  static async hasById(taskId) {\r\n    return await this.getById(taskId) !== undefined;\r\n  }\r\n\r\n  static async save(task) {\r\n    return new Promise(async (resolve) => {\r\n      let tasks = await this.getTasks();\r\n      if (await this.hasById(task.id)) {\r\n        this.storageAll(tasks.map((t) => (t.id === task.id) ? task : t));\r\n        resolve(task);\r\n      } else {\r\n        task.id = await this.nextId();\r\n        tasks.push(task);\r\n        this.storageAll(tasks);\r\n        resolve(tasks);\r\n      }\r\n    }).then((tasks) => this.notify(tasks));\r\n  }\r\n\r\n  static async delete(task) {\r\n    return this.getTasks().then(async (tasks) => {\r\n      let id = (task instanceof Number) ? task : task.id;\r\n      if (await this.hasById(id)) {\r\n        this.storageAll(tasks.filter((task) => task.id !== id));\r\n        return true;\r\n      }\r\n      return false;\r\n    }).then((del) => this.notify(del));\r\n  }\r\n\r\n  static notify(ret) {\r\n    TaskManager.getLoadedTasks()\r\n      .then((tasks) => TaskManager._observers.forEach((func) => {\r\n        func(tasks);\r\n      }));\r\n    return ret;\r\n  }\r\n\r\n  static async register(func) {\r\n    this._observers.push(func);\r\n  }\r\n\r\n  static async unregister(func) {\r\n    return this._observers = this._observers.filter((f) => f === func);\r\n  }\r\n\r\n  static toStorageTask(task) {\r\n    return new StorageTask(task);\r\n  }\r\n\r\n  static async storageAll(tasks) {\r\n    return APPStorage.set('tasks', JSON.stringify(tasks));\r\n  }\r\n\r\n  static async nextId() {\r\n      return await APPStorage.get('nextId')\r\n        .then((num) => APPStorage.set('nextId', parseInt(num) + 1))\r\n        .catch(() => APPStorage.set('nextId', 4));\r\n  }\r\n}\r\n\r\nclass StorageTask {\r\n  \r\n  constructor({ id, title, category, createdDate, dateTime, hours }) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.category = Category.getById(category);\r\n    this.createdDate = moment(createdDate);\r\n    this.dateTime = moment(dateTime);\r\n    this.time = hours.split(':');\r\n    this.hours = this.dateTime.clone().add(this.time[0], \"h\").add(this.time[1], \"m\");\r\n    this.duration = null;\r\n  }\r\n\r\n  get state() {\r\n    if (this.isExpired()) {\r\n      return ['complete', 'Finalizado'];\r\n    }\r\n    if (this.isActive()) {\r\n      return ['active', 'Ativo'];\r\n    }\r\n    return ['scheduled', 'Agendado'];\r\n  }\r\n\r\n  isScheduled() {\r\n    return this.dateTime - moment() > 0;\r\n  }\r\n\r\n  isActive() {\r\n    return this.dateTime - moment() <= 0 && !this.isExpired();\r\n  }\r\n\r\n  isExpired() {\r\n    return this.hours - moment() <= 0;\r\n  }\r\n\r\n  getDateAgo(){\r\n    return moment.duration(this.createdDate - moment(), 'milliseconds');\r\n  }\r\n\r\n  getDuration() {\r\n    if (!this.duration) {\r\n      this.duration = new TaskDuration(this);\r\n    }\r\n    return this.isScheduled()\r\n      ? this.duration.scheduleDuration()\r\n      : this.isActive()\r\n      ? this.duration.activeDuration()\r\n      : null;\r\n  }\r\n\r\n  getTimerString() {\r\n      if (this.getDuration() == null){\r\n          return this.hours.format('DD/MM - HH:mm')\r\n      }\r\n      let duration = this.getDuration();\r\n      if(duration.hours() !== 0) {\r\n        return `${duration.hours()}h${duration.minutes()}m`\r\n      }\r\n      \r\n      return `${duration.minutes()}m`\r\n  }\r\n\r\n  delete() {\r\n    TaskManager.delete(this);\r\n  }\r\n\r\n  toTask() {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      category: this.category.id,\r\n      createdDate: this.createdDate.toISOString(),\r\n      dateTime: this.dateTime.toISOString(),\r\n      hours: `${this.time[0]}:${this.time[1]}`\r\n    }\r\n  }\r\n\r\n  getFixedTime() {\r\n    if (!this.time[0] || !this.time[1]){\r\n      return '01:00';\r\n    }\r\n    return `${this.time[0]}:${this.time[1]}`;\r\n  }\r\n}\r\n\r\nclass TaskDuration {\r\n  constructor({ dateTime, hours }) {\r\n    this.scheduleDuration = () => moment.duration(\r\n      dateTime - moment(),\r\n      \"milliseconds\"\r\n    );\r\n    this.activeDuration = () => moment.duration(hours - moment(), \"milliseconds\");\r\n  }\r\n}\r\n\r\nfunction getUpdatedJson() {\r\n    return data.map((value, index) => {\r\n      value.createdDate = moment().toISOString();\r\n      value.dateTime = moment().add((index + 1) + 2, 'hours').toISOString();\r\n      return value;\r\n    });\r\n}\r\n\r\nexport default TaskManager;\r\n","import React, { Component } from \"react\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport TaskManager from \"../../../lib/task\";\r\n\r\nimport \"./Task.css\";\r\n\r\nexport const TaskContext = React.createContext();\r\n\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    TaskManager.register(this.updateTasks.bind(this)).then(() => {\r\n      TaskManager.getLoadedTasks().then((tsk) => {\r\n        this.setState({ tasks: tsk });\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    TaskManager.unregister(this.updateTasks.bind(this));\r\n  }\r\n\r\n  updateTasks(tasks) {\r\n    this.setState({ ...this.state, tasks: tasks });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"tasks\">\r\n        {this.state.tasks.map(((task) => <TaskCard data={task} key={task.id} />))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { Component } from 'react';\r\nimport Tasks from './Task/Tasks';\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() { \r\n        return (\r\n        <section className=\"dashboard\">\r\n            <div className=\"taskboard\">\r\n                <Tasks/>\r\n            </div>\r\n        </section>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Dashboard;","import APPStorage from './storage';\r\n\r\nclass ImageStorage {\r\n    static async getImage(name) {\r\n        return APPStorage.get(name);\r\n    }\r\n\r\n    static async setImage(name, file) {\r\n        const base64 = await toBase64(file);\r\n        APPStorage.set(name, base64);\r\n        return base64;\r\n    }\r\n}\r\n\r\nfunction toBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nexport default ImageStorage;","export default __webpack_public_path__ + \"static/media/avatar-icon.e5117e8e.jpg\";","import React, { Component } from \"react\";\r\nimport TextFit from \"react-textfit\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport ImageStorage from \"../../../lib/imageStorage\";\r\nimport APPStorage from \"../../../lib/storage\";\r\n\r\nimport avatar from \"./avatar-icon.jpg\";\r\nimport \"./User.css\";\r\n\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: 'username',\r\n      src: avatar,\r\n    };\r\n    \r\n    this.imageInput = React.createRef();\r\n    this.imagePreview = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    ImageStorage.getImage(\"avatar\")\r\n        .then((value) => this.setState({ ...this.state, src: value }));\r\n    APPStorage.get('username')\r\n        .then((value) => this.setState({...this.state, username: value}));\r\n  }\r\n\r\n  handleUsername(e) {\r\n    APPStorage.set('username', e.target.value)\r\n        .then((value) => this.setState({ ...this.state, username: e.target.value }));\r\n  }\r\n\r\n  handleImageUpload(e) {\r\n    let input = this.imageInput?.current;\r\n    input.click();\r\n  }\r\n\r\n  handlePreviewUpdate(e) {\r\n    ImageStorage.setImage(\"avatar\", e.target.files[0])\r\n        .then((base64) => this.setState({...this.state, src: base64 }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"user\">\r\n        <div\r\n          className=\"user-image\"\r\n          ref={this.imagePreview}\r\n          onClick={this.handleImageUpload.bind(this)}\r\n          style={{ backgroundImage: `url(${this.state.src})` }}\r\n        >\r\n          <input\r\n            accept=\".png, .jpg, .gif\"\r\n            className=\"image-upload\"\r\n            type=\"file\"\r\n            ref={this.imageInput}\r\n            onChange={this.handlePreviewUpdate.bind(this)}\r\n          />\r\n        </div>\r\n        <div className=\"user-text\">\r\n          <p>Bem vindo,</p>\r\n          <TextFit\r\n            className=\"username\"\r\n            mode=\"single\"\r\n            forceSingleModeWidth={true}\r\n            max={55}\r\n          >\r\n            <ContentEditable\r\n              html={this.state.username}\r\n              onChange={this.handleUsername.bind(this)}\r\n              tagName=\"h2\"\r\n            ></ContentEditable>\r\n          </TextFit>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from 'react';\r\nimport Category from '../../../lib/category';\r\nimport './DashboardFilter.css';\r\n\r\nclass DashboardFilter extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            active: true\r\n        }\r\n    }\r\n\r\n    handleTitleClick() {\r\n        this.setState({ active: !(this.state.active) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"dashboard-filter\">\r\n            <div className=\"filter-title\" onClick={this.handleTitleClick.bind(this)}>Filtrar</div>\r\n            {(this.state?.active) ?\r\n            <ul className=\"filter-list\">\r\n                {Category.values().map((category, index) => {\r\n                    return <li className=\"filter-item\" key={index}>{category.name}</li>\r\n                })}\r\n            </ul> : ''\r\n            }\r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default DashboardFilter;","import React, { Component } from 'react';\r\n\r\nclass AddTaskButton extends Component {\r\n    render() { \r\n        return (\r\n        <div className=\"task-add\" onClick={this.props?.onClick}>\r\n            <p>Adicionar Tarefa</p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AddTaskButton;","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport Category from \"../../../lib/category\";\r\nimport TaskManager from \"../../../lib/task\";\r\n\r\nclass TaskForm extends Component {\r\n  \r\n  handleForm(e) {\r\n    const form = e.target;\r\n    let name = form[0].value;\r\n    let category = form[1].value;\r\n    let date = form[2].value;\r\n    let hours = form[3].value;\r\n    if (!date) {\r\n      date = moment().add(3, \"hours\");\r\n    } else {\r\n      date = moment(date);\r\n    }\r\n\r\n    TaskManager.save(\r\n      TaskManager.toStorageTask({\r\n        title: name,\r\n        category: category,\r\n        createdDate: moment().toISOString(),\r\n        dateTime: moment(date).toISOString(),\r\n        hours: hours,\r\n      })\r\n    );\r\n\r\n    this.props.onSubmit();\r\n  }\r\n\r\n  handlePreview(e) {\r\n    let form = e.target.form;\r\n    let name = form[0].value;\r\n    let category = form[1].value;\r\n    let date = form[2].value;\r\n    let hours = form[3].value;\r\n\r\n    if (!date) {\r\n      date = moment().add(3, \"hours\");\r\n    } else {\r\n      date = moment(date);\r\n    }\r\n    this.props.setPreview(name, category, date, hours);\r\n  }\r\n\r\n  checkDate(date) {\r\n    moment(date.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"task-form\"\r\n        onReset={this.handleForm.bind(this)}\r\n        onChange={this.handlePreview.bind(this)}\r\n      >\r\n        <div className=\"form-title\">\r\n          <label htmlFor=\"title\" children=\"Titulo\" />\r\n          <input name=\"title\" id=\"title\" />\r\n        </div>\r\n        <div className=\"form-category\">\r\n          <label htmlFor=\"category\" children=\"Categoria\" />\r\n          <select name=\"category\" id=\"category\">\r\n            {Category.values().map((c, index) => {\r\n              return (\r\n                <option value={index} key={index}>\r\n                  {c.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-startdate\">\r\n          <label htmlFor=\"startdate\" children=\"Inicio\" />\r\n          <input\r\n            name=\"startdate\"\r\n            id=\"startdate\"\r\n            type=\"datetime-local\"\r\n            pattern={\"YYYY-MM-DDThh:mm\"}\r\n            min={moment().format(\"YYYY-MM-DDThh:mm\")}\r\n            max={moment().add(7, \"days\").format(\"YYYY-MM-DDThh:mm\")}\r\n          />\r\n        </div>\r\n        <div className=\"form-endtime\">\r\n          <label htmlFor=\"endtime\" children={\"Duração\"} />\r\n          <input name=\"endtime\" id=\"endtime\" type=\"time\" />\r\n        </div>\r\n        <button className=\"submit-button\" type=\"reset\">\r\n          Adicionar\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport TaskCard from '../Dashboard/Task/TaskCard';\r\nimport TaskForm from './Form/TaskForm';\r\nimport TaskManager from '../../lib/task';\r\n\r\nimport './TaskModal.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass AddTaskModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      preview: TaskManager.toStorageTask({\r\n        title: \"Preview\",\r\n        category: 0,\r\n        createdDate: moment().toISOString(),\r\n        dateTime: moment().add(3, \"hours\").toISOString(),\r\n        hours: \"01:00\",\r\n      }),\r\n    };\r\n  }\r\n\r\n  setPreview(title, category, dateTime, hours) {\r\n    let preview = TaskManager.toStorageTask({\r\n      title: title,\r\n      category: category,\r\n      createdDate: moment().toISOString(),\r\n      dateTime: dateTime,\r\n      hours: hours,\r\n    });\r\n    this.setState({ preview: preview });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"modal taskmodal\">\r\n        <div className=\"taskmodal-body\">\r\n          <div className=\"modal-close\" onClick={this.props.onClick}>\r\n            <FontAwesomeIcon icon={['fas', 'times']}/>\r\n          </div>\r\n          <div className=\"taskmodal-form\">\r\n            <TaskForm setPreview={this.setPreview.bind(this)} onSubmit={this.props.onClick}/>\r\n          </div>\r\n\r\n          <div className=\"taskmodal-preview\">\r\n            <TaskCard data={this.state.preview} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n \r\nexport default AddTaskModal;","import React, { Component } from \"react\";\r\nimport User from \"./User/User\";\r\nimport DashboardFilter from \"./DashboardFilter/DashboardFilter\";\r\nimport AddTaskButton from \"./AddTaskButton/AddTaskButton\";\r\nimport AddTaskModal from '../Modal/AddTaskModal';\r\n\r\nimport \"./Profile.css\";\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { modal: true }\r\n  }\r\n\r\n  handleModal() {\r\n    this.setState({ modal: !this.state.modal });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"user-profile\">\r\n        <div className=\"profile\">\r\n          <User/>\r\n          <div className=\"profile-buttons\">\r\n            <DashboardFilter/>\r\n          </div>\r\n          <AddTaskButton onClick={this.handleModal.bind(this)}/>\r\n          {(this.state.modal) ? <AddTaskModal onClick={this.handleModal.bind(this)}/> : ''}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport Profile from \"./components/Profile/Profile\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"app-body\">\r\n          <Profile />\r\n          <Dashboard />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport moment from 'moment';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faEllipsisH, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport App from './App';\r\n\r\nimport momentConfig from'./data/moment_pt-br.json';\r\nimport './index.css';\r\n\r\n\r\nlibrary.add(faEllipsisH);\r\nlibrary.add(faTimes);\r\nmoment.defineLocale('pt-br', momentConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}